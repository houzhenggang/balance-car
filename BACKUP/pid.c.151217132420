#include "pid.h"

void PID_InitStruture(PID_Struture* pid,float kp,float ki,float kd,float target)
{
 	pid->kp = kp;
	pid->ki = ki;
	pid->kd = kd;
	pid->target = target;
	pid->enote[PRESENT] = 0;
	pid->enote[LAST] = 0;
	pid->enote[BEFORE] = 0;
	pid->sumerr = 0;
}

float PID_devCal(PID_Struture* pid,float fbv)
{
	float temp = pid->enote[BEFORE];
	pid->enote[BEFORE] = pid->enote[LAST];
	pid->enote[LAST] = pid->enote[PRESENT];
	pid->enote[PRESENT] = (pid->target - fbv);
	pid->sumerr += pid->enote[PRESENT];
	return temp;
}

float PID_Inc(PID_Struture* pid)
{
	pid->lastcontrol = pid->kp*(pid->enote[PRESENT] - pid->enote[LAST]) + pid->ki*pid->enote[PRESENT] \
					   + pid->kd*(pid->enote[PRESENT] - 2*pid->enote[LAST] +pid->enote[BEFORE]); 
	return pid->lastcontrol;
}

float PID_Nor(PID_Struture* pid)
{
		pid->lastcontrol = pid->kp*pid->enote[PRESENT] + pid->ki*pid->sumerr + \
		                   pid->kd*(pid->enote[PRESENT] - pid->enote[LAST]); 
		return pid->lastcontrol;
}