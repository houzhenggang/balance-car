#include "iom128v.h"
#include "stdio.h"
#include "motor.h"
#include "usart.h"
#include "gy_25.h"
#include "encoder.h"
#include "pid.h"

unsigned long countLeft = 0;
unsigned long countRight = 0;
unsigned char timerCount = 0;
INC_PID anglePID;
float angleInc;
float angleSum = 0;
float targeAngle;
float kp=10, ki=0, kd=0;

int main(void)
{
	usart0_init(9600);
	printf("usart0 init OK!\n");
	
	motor_init();
	printf("motor init OK!\n");
	
	gy_25_init();
	printf("gy_25 init OK!\n");
	
	encoder_init();
	printf("encoder init OK!\n");
	
	//等待0.5秒稳定后采集到的角度作为目标角度
	delay_ms(500);
	targeAngle = (float)get_angle()/100;
	Inc_Pid_Config(&anglePID,kp,ki,kd,targeAngle);
	printf("targeAngle :%f\n",targeAngle);
	printf("pid init OK!\n");
	
	timer3_init();
	printf("timer3 init OK!\n");
	
	while(1)
	{
	    //经过PID得到增量
	    angleInc = Inc_Cal(&anglePID, (float)get_angle()/100);
		printf("%f\n",angleInc);
	 
	 	//累计增量
	 	angleSum += angleInc;
	 
	 	//将累计增量转化为pwm输出
	 	//motor_A_run(angleSum*0.1);
	 	//motor_B_run(angleSum*0.1);
		delay_ms(20);
	}
	return 0;
}

//定时器3中断溢出
#pragma interrupt_handler timer3_interrupt: 30
void timer3_interrupt(void) 
{ 
	 TCNT3=55535;
	 timerCount++;
	 
	 /*
	 //经过PID得到增量
	 angleInc = Inc_Cal(&anglePID, (float)get_angle()/100);
	 printf("%f\n",angleInc);
	 
	 //累计增量
	 angleSum += angleInc;
	 
	 //将累计增量转化为pwm输出
	 motor_A_run(angleSum*0.1);
	 motor_B_run(angleSum*0.1);
	 */
	 
	 if(timerCount == 5)
	 {
		 timerCount = 0;
	 	 countLeft=0;
	 	 countRight=0;
	 }
}

//串口0接收中断
#pragma interrupt_handler uart_receive:19
void uart_receive(void)
{  
   unsigned char rchar;
   
   rchar = UDR0;
  
   send_char(rchar);
}

//外部中断0
#pragma interrupt_handler INT_T0:2
void INT_T0(void)
{
 	 countLeft++;
}

//外部中断1 
#pragma interrupt_handler INT_T1:3
void INT_T1(void)
{
 	 countRight++;
}

